---
# +++++++++++++++++++++++++++++++++++++++++++++++ #
#       Vagrant VM Configuration                  #
# +++++++++++++++++++++++++++++++++++++++++++++++ #

###################
# User/Profile info
###################
PROFILE:
  ## git informations
  email:    'www3838438@yahoo.com'
  realname: 'www3838438'

  ## default shell
  shell:    '/bin/zsh'

  ## zsh shell layout [grml,prezto,ohmyzsh]
  zshShell: 'grml'

  ## Github username, eg. for automatic ssh pub-key fetching
  githubUser: ''

###################
# VM (vagrant) settings
###################
VM:
  # Name of VM
  name: 'ubuntu-1804-docker-dev'

  # Base image
  # You can use nearly any Ubuntu 16.04 vagrant base image.
  # This VM is tested with box-cutter image
  #
  # Images:
  # -> box-cutter/ubuntu1604
  #
  image: 'ubuntu-1804-base'

  # Enable GUI mode (show screen of VM)
  gui: false

  # ---------------------------------------------
  # Resource settings
  #

  # cpu:
  #   auto -> max number of CPU cores
  #      2 -> 2 CPU cores
  cpu:    'auto'

  # memory (in MB):
  #   auto -> 1/4 of system RAM
  #   1500 -> 1.5 GB RAM
  memory: 'auto'

  # vram (in MB):
  #   video memory (currently vbox only)
  vram:   100

  # TimeZone (check tselect(1) for possible values)
  #timezone: 'Etc/UTC'

  # ---------------------------------------------
  # Data image (additonal partition) settings
  #
  data:
    # Image size in GB
    size: 99

    # Filesystem of image
    # -> ext4, btrfs or xfs
    filesystem: 'ext4'

  # ---------------------------------------------
  # Network settings
  #
  network:
    # Private/Host-only network
    private:
      address: 192.168.56.2
      netmask: 192.168.56.0/24

    # Public bridged network
    #  |WARNING| This can be a big security issue and an attacker could
    #  |WARNING| gain access also to host (because of shares or services)!
    #  |WARNING| Only use if you're sure about the risks!
    #  |WARNING| If you need access to services use the port forwarding features!
    bridged:
      # Address
      #  false -> disabled
      #  auto  -> auto configuration (dhcp)
      address: 'false'
      bridge: 'en0'

  # ---------------------------------------------
  # Shared folders
  #
  sharedFolder:
    - { type: 'home' }
    #- { type: 'nfs', src: '~/Projects', target: '/var/www' }

  # ---------------------------------------------
  # Port forwarding
  #
  portForwarding:
    #- { guest: 80, host: 80, hostIp: '0.0.0.0', protocol: 'tcp' }
    #- { guest: 80, host: 8000, hostIp: '0.0.0.0', protocol: 'tcp' }
    #- { guest: 13306, host: 3306, hostIp: '0.0.0.0', protocol: 'tcp' }

  # ---------------------------------------------
  # Workarounds
  #
  workaround:
    # Fallback ssh connection (https://github.com/mitchellh/vagrant/issues/5186)
    # -> Authentication issues? Workaround:
    useSshPasswordAuth: true

  # ---------------------------------------------
  # VirtualBox settings
  #
  virtualbox:
    # Disk image controller, may change between images, eg.
    # You sometimes have to switch controller if the image is using another one.
    # See VM settings in VirtualBox for the correct naming.
    #
    #  -> 'IDE Controller'
    #  -> 'SATA Controller'
    diskController: 'SATA Controller'

###################
# Provisioning features
###################
PROVISION:
  update:      1      # do full system update for each full provisoning
  samba:       1      # Samba server
  ntp:         1      # Time synchronization
  mail:        1      # Mail sandbox
  php:         1      # Local PHP
  dnsmasq:     1      # dnsmasq service (needed for docker consul registration)
  consul:      1      # Docker consul service
  docker:      1      # Docker server
  dockerDory:  1      # Docker docker service --> https://github.com/FreedomBen/dory
  clitools:    1      # CliTools
  desktop:     0      # GUI desktop [0, kde, unity, gnome]
  manpages:    1      # Manpages are not available in baseimage, so reinstall them
  buildEssentials: 0  # build essentials (gcc, compilers...)

  ## Development domain (automatic redirect of *.docker for internal use)
  developmentDomain: 'docker'

  # apt packages
  apt: []

  # npm packages
  npm: []

  # Ruby gems
  gem: []

  # python pip packages
  pip: [pipenv]

###################
# Docker features
###################
DOCKER:
  ## Additional docker opts
  ##  -> if you use btrfs you can set: -s btrfs
  opts: ''

  # Cleanup tasks on provisioning
  cleanup:
    # Clean orphaned images and volumes
    system: 1

    # Cleanup /var/lib/docker/tmp/
    tmp: 1

  ## Automatic docker image pulling
  images: []

###################
# Clitools settings
###################
CLITOOLS:
  ## Password for growl server
  growlPassword: ''
  db:
    dsn:      'mysql:host=127.0.0.1;port=13306'
    username: 'root'
    password: 'dev'
  docker:
    boilerplate: 'https://github.com/mblaschke/php-docker-boilerplate.git'

###################
# Firewall settings
###################
FIREWALL:
  rules:
      #- { port: 22, protocol: tcp, source: '10.0.0.0/8' } # SSH
      #- { port: 143, protocol: tcp } # IMAP
      - { port: 80, protocol: tcp }  # HTTP
      - { port: 443, protocol: tcp } # HTTPS
